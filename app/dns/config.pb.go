package dns

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import net "v2ray.com/core/common/net"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	// Nameservers used by this DNS. Only traditional UDP servers are support at the moment.
	// A special value 'localhost' as a domain address can be set to use DNS on local system.
	NameServers []*net.Endpoint `protobuf:"bytes,1,rep,name=NameServers,proto3" json:"NameServers,omitempty"`
	// Static hosts. Domain to IP.
	Hosts map[string]*net.IPOrDomain `protobuf:"bytes,2,rep,name=Hosts,proto3" json:"Hosts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Client IP for EDNS client subnet.
	ClientIp             *Config_ClientIP `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_209d2630698ab6f5, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetNameServers() []*net.Endpoint {
	if m != nil {
		return m.NameServers
	}
	return nil
}

func (m *Config) GetHosts() map[string]*net.IPOrDomain {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *Config) GetClientIp() *Config_ClientIP {
	if m != nil {
		return m.ClientIp
	}
	return nil
}

type Config_ClientIP struct {
	// IPv4 address of the client. Must be 4 bytes.
	V4 []byte `protobuf:"bytes,1,opt,name=v4,proto3" json:"v4,omitempty"`
	// IPv6 address of the client. Must be 4 bytes.
	V6                   []byte   `protobuf:"bytes,2,opt,name=v6,proto3" json:"v6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config_ClientIP) Reset()         { *m = Config_ClientIP{} }
func (m *Config_ClientIP) String() string { return proto.CompactTextString(m) }
func (*Config_ClientIP) ProtoMessage()    {}
func (*Config_ClientIP) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_209d2630698ab6f5, []int{0, 1}
}
func (m *Config_ClientIP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config_ClientIP.Unmarshal(m, b)
}
func (m *Config_ClientIP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config_ClientIP.Marshal(b, m, deterministic)
}
func (dst *Config_ClientIP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config_ClientIP.Merge(dst, src)
}
func (m *Config_ClientIP) XXX_Size() int {
	return xxx_messageInfo_Config_ClientIP.Size(m)
}
func (m *Config_ClientIP) XXX_DiscardUnknown() {
	xxx_messageInfo_Config_ClientIP.DiscardUnknown(m)
}

var xxx_messageInfo_Config_ClientIP proto.InternalMessageInfo

func (m *Config_ClientIP) GetV4() []byte {
	if m != nil {
		return m.V4
	}
	return nil
}

func (m *Config_ClientIP) GetV6() []byte {
	if m != nil {
		return m.V6
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "v2ray.core.app.dns.Config")
	proto.RegisterMapType((map[string]*net.IPOrDomain)(nil), "v2ray.core.app.dns.Config.HostsEntry")
	proto.RegisterType((*Config_ClientIP)(nil), "v2ray.core.app.dns.Config.ClientIP")
}

func init() {
	proto.RegisterFile("v2ray.com/core/app/dns/config.proto", fileDescriptor_config_209d2630698ab6f5)
}

var fileDescriptor_config_209d2630698ab6f5 = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x51, 0x4b, 0xf3, 0x30,
	0x14, 0x86, 0x69, 0xcb, 0xc6, 0x96, 0x7d, 0x7c, 0x48, 0x2e, 0xa4, 0xf4, 0xc6, 0xe9, 0x10, 0x87,
	0x42, 0x0a, 0x75, 0x4c, 0xd1, 0x1b, 0xe7, 0x36, 0x70, 0x37, 0x3a, 0x2a, 0x78, 0xa1, 0x17, 0x12,
	0x9b, 0x28, 0xc1, 0xf5, 0x24, 0x24, 0xb1, 0xd0, 0xbf, 0xe4, 0xdf, 0xf1, 0x0f, 0xc9, 0x12, 0x86,
	0x43, 0x9d, 0x77, 0x3d, 0xf4, 0x7d, 0x9e, 0xf7, 0x1c, 0x82, 0x7a, 0x55, 0xa6, 0x69, 0x4d, 0x0a,
	0x59, 0xa6, 0x85, 0xd4, 0x3c, 0xa5, 0x4a, 0xa5, 0x0c, 0x4c, 0x5a, 0x48, 0x78, 0x16, 0x2f, 0x44,
	0x69, 0x69, 0x25, 0xc6, 0xab, 0x90, 0xe6, 0x84, 0x2a, 0x45, 0x18, 0x98, 0xe4, 0xe0, 0x1b, 0x58,
	0xc8, 0xb2, 0x94, 0x90, 0x02, 0xb7, 0x29, 0x65, 0x4c, 0x73, 0x63, 0x3c, 0x9c, 0x1c, 0x6d, 0x0e,
	0x32, 0x6e, 0xac, 0x00, 0x6a, 0x85, 0x04, 0x1f, 0xde, 0xfb, 0x08, 0x51, 0x73, 0xec, 0xaa, 0xf1,
	0x08, 0x75, 0xae, 0x69, 0xc9, 0x6f, 0xb9, 0xae, 0xb8, 0x36, 0x71, 0xd0, 0x8d, 0xfa, 0x9d, 0x6c,
	0x87, 0xac, 0xad, 0xe2, 0x4d, 0x04, 0xb8, 0x25, 0x53, 0x60, 0x4a, 0x0a, 0xb0, 0xf9, 0x3a, 0x83,
	0xcf, 0x51, 0xe3, 0x4a, 0x1a, 0x6b, 0xe2, 0xd0, 0xc1, 0xfb, 0xe4, 0xe7, 0x1d, 0xc4, 0xb7, 0x11,
	0x97, 0x9b, 0x82, 0xd5, 0x75, 0xee, 0x19, 0x7c, 0x81, 0xda, 0xc5, 0x42, 0x70, 0xb0, 0x8f, 0x42,
	0xc5, 0x51, 0x37, 0xe8, 0x77, 0xb2, 0xde, 0x1f, 0x82, 0xb1, 0xcb, 0xce, 0xe6, 0x79, 0xcb, 0x53,
	0x33, 0x95, 0x3c, 0x20, 0xf4, 0xa5, 0xc5, 0x5b, 0x28, 0x7a, 0xe5, 0x75, 0x1c, 0x74, 0x83, 0x7e,
	0x3b, 0x5f, 0x7e, 0xe2, 0x13, 0xd4, 0xa8, 0xe8, 0xe2, 0x8d, 0xc7, 0xa1, 0xb3, 0xef, 0x6e, 0xb8,
	0x6d, 0x36, 0xbf, 0xd1, 0x13, 0x59, 0x52, 0x01, 0xb9, 0xcf, 0x9f, 0x85, 0xa7, 0x41, 0x72, 0x88,
	0x5a, 0xab, 0x4a, 0xfc, 0x1f, 0x85, 0xd5, 0xc0, 0x99, 0xff, 0xe5, 0x61, 0x35, 0x70, 0xf3, 0xd0,
	0x59, 0x97, 0xf3, 0xf0, 0x72, 0x80, 0xb6, 0x0b, 0x59, 0xfe, 0xb2, 0xfc, 0x3c, 0xb8, 0x8f, 0x18,
	0x98, 0xf7, 0x10, 0xdf, 0x65, 0x39, 0xad, 0xc9, 0x78, 0xf9, 0x6f, 0xa4, 0x14, 0x99, 0x80, 0x79,
	0x6a, 0xba, 0x27, 0x39, 0xfe, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x55, 0xb0, 0x77, 0x62, 0x23, 0x02,
	0x00, 0x00,
}
